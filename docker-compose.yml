# Docker Compose configuration for Autonomous Multi-LLM Agent System
version: '3.8'

services:
  # Main application
  autonomous-agent:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: autonomous-agent-app
    ports:
      - "8000:8000"  # API server
      - "8001:8001"  # WebSocket
      - "9090:9090"  # Prometheus metrics
    environment:
      - ENVIRONMENT=development
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - NOTION_API_KEY=${NOTION_API_KEY}
      - GITHUB_TOKEN=${GITHUB_TOKEN}
      - REDIS_URL=redis://redis:6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    volumes:
      - ./src:/app/src
      - ./config:/app/config
      - ./logs:/app/logs
      - ./data:/app/data
    depends_on:
      - redis
      - consul
      - prometheus
    restart: unless-stopped
    networks:
      - autonomous-agent-network

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: autonomous-agent-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - autonomous-agent-network

  # Consul for service discovery
  consul:
    image: consul:1.16
    container_name: autonomous-agent-consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    volumes:
      - consul_data:/consul/data
    command: consul agent -dev -client=0.0.0.0 -ui
    restart: unless-stopped
    networks:
      - autonomous-agent-network

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: autonomous-agent-prometheus
    ports:
      - "9091:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - autonomous-agent-network

  # Grafana for dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: autonomous-agent-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - autonomous-agent-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: autonomous-agent-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - autonomous-agent
    restart: unless-stopped
    networks:
      - autonomous-agent-network

  # Worker nodes (for horizontal scaling)
  worker-1:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: autonomous-agent-worker-1
    environment:
      - ENVIRONMENT=production
      - WORKER_MODE=true
      - REDIS_URL=redis://redis:6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    depends_on:
      - redis
      - consul
    restart: unless-stopped
    networks:
      - autonomous-agent-network

  worker-2:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: autonomous-agent-worker-2
    environment:
      - ENVIRONMENT=production
      - WORKER_MODE=true
      - REDIS_URL=redis://redis:6379
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    depends_on:
      - redis
      - consul
    restart: unless-stopped
    networks:
      - autonomous-agent-network

volumes:
  redis_data:
  consul_data:
  prometheus_data:
  grafana_data:

networks:
  autonomous-agent-network:
    driver: bridge